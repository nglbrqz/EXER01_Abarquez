package MyApp;

import java.util.*;
import javax.swing.*;

/**
 *
 * @author Angela
 */
public class DinerMenu extends javax.swing.JFrame {
    int price = 0,
        numOrders = 4;
    private final Map<String, Integer> menuPrices = new HashMap<>();
    
    // Boolean to track whether an order has been placed
    private boolean orderPlaced = false;
    
    // Creates new form DinerMenu
    public DinerMenu() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
        // Initialize menu items and prices
        menuPrices.put("Chicken Salad", 100);
        menuPrices.put("Tuna Salad", 150);
        menuPrices.put("Vegetable Salad", 200);
        menuPrices.put("Soda", 50);
        menuPrices.put("Juice", 150);
        menuPrices.put("MilkTea", 100);
        menuPrices.put("Water", 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drinkSelectionButtonGroup = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        menuSelectionLabel = new javax.swing.JLabel();
        drinkSelectionLabel = new javax.swing.JLabel();
        menuSelectionComboBox = new javax.swing.JComboBox<>();
        radioButton_soda = new javax.swing.JRadioButton();
        radioButton_juice = new javax.swing.JRadioButton();
        radioButton_milktea = new javax.swing.JRadioButton();
        specialRequestLabel = new javax.swing.JLabel();
        specialRequestTextField = new javax.swing.JTextField();
        waterCheckBox = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        file_placeOrder = new javax.swing.JMenuItem();
        file_clearOrder = new javax.swing.JMenuItem();
        file_displayOrder = new javax.swing.JMenuItem();
        file_exit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        edit_menuSelection = new javax.swing.JMenuItem();
        edit_drink = new javax.swing.JMenuItem();
        edit_specialRequest = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        help_about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(245, 236, 231));

        menuSelectionLabel.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        menuSelectionLabel.setText("Menu Selection");

        drinkSelectionLabel.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        drinkSelectionLabel.setText("Drink Selection");

        menuSelectionComboBox.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        menuSelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chicken Salad", "Tuna Salad", "Vegetable Salad" }));

        radioButton_soda.setBackground(new java.awt.Color(245, 236, 231));
        drinkSelectionButtonGroup.add(radioButton_soda);
        radioButton_soda.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        radioButton_soda.setText("Soda");
        radioButton_soda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_sodaActionPerformed(evt);
            }
        });

        radioButton_juice.setBackground(new java.awt.Color(245, 236, 231));
        drinkSelectionButtonGroup.add(radioButton_juice);
        radioButton_juice.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        radioButton_juice.setText("Juice");

        radioButton_milktea.setBackground(new java.awt.Color(245, 236, 231));
        drinkSelectionButtonGroup.add(radioButton_milktea);
        radioButton_milktea.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        radioButton_milktea.setText("Milk Tea");
        radioButton_milktea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_milkteaActionPerformed(evt);
            }
        });

        specialRequestLabel.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        specialRequestLabel.setText("Special Request");

        specialRequestTextField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        specialRequestTextField.setText(" ");

        waterCheckBox.setBackground(new java.awt.Color(245, 236, 231));
        waterCheckBox.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        waterCheckBox.setText("Water");
        waterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(waterCheckBox)
                            .addComponent(specialRequestLabel)
                            .addComponent(specialRequestTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(menuSelectionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(133, 133, 133))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(menuSelectionLabel)
                                .addGap(141, 141, 141)))
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(drinkSelectionLabel)
                            .addComponent(radioButton_milktea)
                            .addComponent(radioButton_juice)
                            .addComponent(radioButton_soda))
                        .addContainerGap(81, Short.MAX_VALUE))))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(menuSelectionLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(drinkSelectionLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuSelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(radioButton_soda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioButton_juice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioButton_milktea)))
                .addGap(8, 8, 8)
                .addComponent(specialRequestLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specialRequestTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(waterCheckBox)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        menuSelectionComboBox.setSelectedIndex(-1);

        jMenuBar1.setBackground(new java.awt.Color(255, 234, 222));
        jMenuBar1.setForeground(new java.awt.Color(255, 234, 222));
        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        menuFile.setBackground(new java.awt.Color(255, 178, 117));
        menuFile.setText(" File    ");
        menuFile.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        file_placeOrder.setText("Place the Order");
        file_placeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_placeOrderActionPerformed(evt);
            }
        });
        menuFile.add(file_placeOrder);

        file_clearOrder.setText("Clear the Order");
        file_clearOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_clearOrderActionPerformed(evt);
            }
        });
        menuFile.add(file_clearOrder);

        file_displayOrder.setText("Display the Order");
        file_displayOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_displayOrderActionPerformed(evt);
            }
        });
        menuFile.add(file_displayOrder);

        file_exit.setText("Exit");
        file_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_exitActionPerformed(evt);
            }
        });
        menuFile.add(file_exit);

        jMenuBar1.add(menuFile);

        menuEdit.setText(" Edit    ");
        menuEdit.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        edit_menuSelection.setText("Menu Selection");
        edit_menuSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_menuSelectionActionPerformed(evt);
            }
        });
        menuEdit.add(edit_menuSelection);

        edit_drink.setText("Drink");
        edit_drink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_drinkActionPerformed(evt);
            }
        });
        menuEdit.add(edit_drink);

        edit_specialRequest.setText("Special Request");
        edit_specialRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_specialRequestActionPerformed(evt);
            }
        });
        menuEdit.add(edit_specialRequest);

        jMenuBar1.add(menuEdit);

        menuHelp.setText(" Help    ");
        menuHelp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        help_about.setText("About");
        help_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help_aboutActionPerformed(evt);
            }
        });
        menuHelp.add(help_about);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void file_placeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_placeOrderActionPerformed
        // Check if menu selection, drink selection, and special request are made
        if (menuSelectionComboBox.getSelectedIndex() == -1 ||
            drinkSelectionButtonGroup.getSelection() == null) {

            // Display an error message
            javax.swing.JOptionPane.showMessageDialog(this, "You can only place a complete order!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else {
            // If specialRequestTextField is empty, set its value to "None"
            if (specialRequestTextField.getText().trim().isEmpty()) {
                specialRequestTextField.setText("None");
            }
            // Set orderPlaced to true since an order has been placed
            orderPlaced = true;

            // Display the current order details
            displayOrderDetails();
        }
    }//GEN-LAST:event_file_placeOrderActionPerformed

    private void radioButton_sodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_sodaActionPerformed
    }//GEN-LAST:event_radioButton_sodaActionPerformed

    private void radioButton_milkteaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_milkteaActionPerformed
    }//GEN-LAST:event_radioButton_milkteaActionPerformed

    private void waterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterCheckBoxActionPerformed
    }//GEN-LAST:event_waterCheckBoxActionPerformed

    private void file_clearOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_clearOrderActionPerformed
        resetMenuContents();
    }//GEN-LAST:event_file_clearOrderActionPerformed

    private void file_displayOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_displayOrderActionPerformed
        // Check if an order has been placed
        if (orderPlaced) {
            // If an order has been placed, create an instance of OrderDisplay and display it
            OrderDisplay orderDisplayForm = new OrderDisplay();

            // Pass the order details to the OrderDisplay form
            orderDisplayForm.setOrderDetails(buildOrderDetails());

            orderDisplayForm.setVisible(true);
            this.setVisible(false);
        } else {
            // If no order has been placed, show an error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please place an order first!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_file_displayOrderActionPerformed

    private void file_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_exitActionPerformed
        // Close the application
        //System.exit(0);
        // If an order has been placed, create an instance of OrderDisplay and display it
            Exit exitWindow = new Exit();
            exitWindow.setVisible(true);
    }//GEN-LAST:event_file_exitActionPerformed

    private void edit_menuSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_menuSelectionActionPerformed
        resetMenuSelection();
    }//GEN-LAST:event_edit_menuSelectionActionPerformed

    private void edit_drinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_drinkActionPerformed
        resetDrinkSelection();
    }//GEN-LAST:event_edit_drinkActionPerformed

    private void edit_specialRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_specialRequestActionPerformed
        resetSpecialRequest();
    }//GEN-LAST:event_edit_specialRequestActionPerformed

    private void help_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_aboutActionPerformed
        String aboutMessage = "<html><div style='text-align: center; font-size:16px;'>" +
                "Mini Diner Application<br>" +
                "By: Angela Abarquez<br><br>" +
                "Version 1.0" +
                "</div></html>";

        // Display the JOptionPane with HTML-formatted text
        JOptionPane.showMessageDialog(this, aboutMessage, "Information", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_help_aboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DinerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DinerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DinerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DinerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DinerMenu().setVisible(true);
            }
        });
    }
    
    private void displayOrderDetails() {
        // Calculate the total price and build order details
        String orderDetails = buildOrderDetails();

        // Display the order details
        javax.swing.JOptionPane.showMessageDialog(this, orderDetails, "Order Details", javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }

     private int calculateTotalPrice() {
        // Calculate the total price based on the selected salad, drink, special request, and water
        int totalPrice = 0;

        // Add salad price
        String selectedSalad = (String) menuSelectionComboBox.getSelectedItem();
        totalPrice += menuPrices.get(selectedSalad);

        // Add drink price
        if (radioButton_soda.isSelected()) {
            totalPrice += menuPrices.get("Soda");
        } else if (radioButton_juice.isSelected()) {
            totalPrice += menuPrices.get("Juice");
        } else if (radioButton_milktea.isSelected()) {
            totalPrice += menuPrices.get("MilkTea");
        }
        
        // Add water price
        if (waterCheckBox.isSelected()) {
            totalPrice += menuPrices.get("Water");
        }

        return totalPrice;
    }
     
     private String buildOrderDetails() {
        // initialize the order variables
        int totalPrice = calculateTotalPrice();
        // Fetch the price based on the selected menu item
        String menuSelection = (String) menuSelectionComboBox.getSelectedItem();
        String drinkSelection = "";
        if (radioButton_soda.isSelected()) {
            drinkSelection = "Soda";
        } else if (radioButton_juice.isSelected()) {
            drinkSelection = "Juice";
        } else if (radioButton_milktea.isSelected()) {
            drinkSelection = "MilkTea";
        }
        String specialRequest = specialRequestTextField.getText().trim();
        
        int menuPrice = menuPrices.getOrDefault(menuSelection, 0);
        int drinkPrice = menuPrices.getOrDefault(drinkSelection, 0);
         
        StringBuilder orderDetails = new StringBuilder("");

        // Header
        orderDetails.append("Order\t\t   Price\n");
        // Foodname and Price
        orderDetails.append(menuSelection).append("\t   ").append(menuPrice).append("\n");
        orderDetails.append(drinkSelection).append("\t\t   ").append(drinkPrice).append("\n");
        orderDetails.append("_________________________\n");
        orderDetails.append("Total:\t\t   ").append(totalPrice).append("\n\n");
        
        orderDetails.append("Water: ").append(waterCheckBox.isSelected() ? "Yes" : "No").append("\n");

        // Append Special Request with line breaks
        orderDetails.append("Special Request:\n");
        int maxLineLength = 45;  // Maximum characters per line
        String specialRequestText = specialRequest.trim();
        for (int i = 0; i < specialRequestText.length(); i += maxLineLength) {
            int endIndex = Math.min(i + maxLineLength, specialRequestText.length());
            orderDetails.append(specialRequestText, i, endIndex).append("\n");
        }
        return orderDetails.toString();
    }
    
    public void resetMenuContents() {
        // Reset menu selection
        menuSelectionComboBox.setSelectedIndex(-1);
        // Reset drink selection
        drinkSelectionButtonGroup.clearSelection();
        // Reset special request
        specialRequestTextField.setText("");
        // Reset water checkbox
        waterCheckBox.setSelected(false);
        
        orderPlaced = false;
    }
    
    public void resetMenuSelection() {
        // Clear the salad menu selection
        menuSelectionComboBox.setSelectedIndex(-1); // Set to the default value
        javax.swing.JOptionPane.showMessageDialog(this, "Salad selection cleared.", "Menu Selection Cleared", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        orderPlaced = false;
    }
    
    public void resetDrinkSelection() {
        // Clear the drink selection
        drinkSelectionButtonGroup.clearSelection(); // Deselect all radio buttons
        javax.swing.JOptionPane.showMessageDialog(this, "Drink selection cleared.", "Drink Cleared", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        orderPlaced = false;
    }
    
    public void resetSpecialRequest() {
        // Clear the special request selection
        specialRequestTextField.setText(""); // Clear the text field
        javax.swing.JOptionPane.showMessageDialog(this, "Special request cleared.", "Special Request Cleared", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        orderPlaced = false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup drinkSelectionButtonGroup;
    private javax.swing.JLabel drinkSelectionLabel;
    private javax.swing.JMenuItem edit_drink;
    private javax.swing.JMenuItem edit_menuSelection;
    private javax.swing.JMenuItem edit_specialRequest;
    private javax.swing.JMenuItem file_clearOrder;
    private javax.swing.JMenuItem file_displayOrder;
    private javax.swing.JMenuItem file_exit;
    private javax.swing.JMenuItem file_placeOrder;
    private javax.swing.JMenuItem help_about;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JComboBox<String> menuSelectionComboBox;
    private javax.swing.JLabel menuSelectionLabel;
    private javax.swing.JRadioButton radioButton_juice;
    private javax.swing.JRadioButton radioButton_milktea;
    private javax.swing.JRadioButton radioButton_soda;
    private javax.swing.JLabel specialRequestLabel;
    private javax.swing.JTextField specialRequestTextField;
    private javax.swing.JCheckBox waterCheckBox;
    // End of variables declaration//GEN-END:variables
}
